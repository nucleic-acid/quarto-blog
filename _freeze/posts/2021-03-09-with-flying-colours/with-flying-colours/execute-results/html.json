{
  "hash": "d06014ec3175c77e2dea74d4ccdc9bf4",
  "result": {
    "markdown": "---\ntitle: \"With flying colours\"\nsubtitle: |\n  After three months of sailing, it is time to adjust the rigging. A refreshed look with a custom color palette, a custom ggplot2 theme and an updated logo and new typography.\ndescription: \"\"\ndate: 2021-09-03\ncategories:\n  - meta\n  - typography\n  - ggplot2\n  - superseded\nimage: images/Zeichnung.png\nimage-alt: \"Three words on a dark background: with flying colours. Each word is differently coloured: orange, blue, red.\"\ntitle-block-style: default\nmargin-top: 4em\n---\n\n\n\n\n<details class=\"update-list\"><summary>Updates</summary>\n\n2022-06-08\n: blog design was completely overhauled in the switch from {distill} to quarto. For historic purposes the initial design stays documented here.\n\n2021-06-15\n: tweaked dark_slate color for website, logo and ggplot-theme\n\n2021-04-02\n: added custom fonts to ggplot-theme\n\n</details>\n\n## How the blog left the docks\n\nBack, when I started, I made some initial design decisions (fonts, a few colours, logo). Other things were deliberately left in their default setting, in order to get the blog finally started without loosing myself in constant optimising before launch. \nThe important steps before launch were setting up the web hosting and understanding how the distill blogging tool works.\n\n## A new rigging\n\nNow after three posts I have some ideas on how to improve the overall appearance of the blog and to streamline the writing of the posts.\nIn this section I will describe how I adjusted the fonts, the colour palette of the blog and for plotting and how I set up a custom basic ggplot2 theme, that I can simply apply to all plots.\n\n### Typography\nMy initial choices for the fonts were some of my favorite font families: Cabin (sans serif) for body text and plots, Crimson Pro (serif) for headings and Inconsolata (mono) for code chunks.\n\nWhile this had a classy look^[This is obviously a matter of taste. This is my view on this font pairing.], after some time now I felt it was a bit \"too classy\", as in old-fashioned. I want the blog to have a serious yet modern look and feel. One of the most direct ways to achieve this is a set of fonts that play well together and represents the idea of the post.\n\nAfter some playing around I settled on\n\n- \"[Bitter](https://fonts.google.com/specimen/Bitter?preview.text_type=custom#about)\", a serif font. I really like the sharper edges, the clean lines and the almost \"slab-like\" serifs. Besides the headings, I tweaked the CSS to use this family in the nav-bar, the block quotes and used the light cut in the updated extended logo.\n- \"[Open Sans](https://fonts.google.com/specimen/Open+Sans?preview.text_type=custom#about)\", a sans-serif font for the body text. This one is widely used and a neutral and very legible font - just what I need. I use these in the plots as well.\n- I stayed with \"[Inconsolata](https://fonts.google.com/specimen/Inconsolata?preview.text_type=custom#about)\" for code-chunks. It's an unagitated, elegant mono spaced font and I think it blends well into the overall look.^[A runner up was \"Fira Mono\", but that had too much of a character on its own and all in all it disturbed the harmony.]\n\n### Colors and an updated logo\n\nThe **blog** basically needs only two colors: the dark color for the nav-bar / the footer and an accent color that will (for now) be used in the logo and might later be used for some stylistic accents in the text.\n\n![The logo of the jolly data blog, after the update in June 2021. New are the colors, the font and a sharper look to the jolly. `&#169;`{=html} 2022 Christian A. Gebhard](../../assets/images/logo_w_name.png)\n\nAs you can see in the image above, the dark color was changed from a dark blue to a dark slate with only a decent hue of blue (I called it *dark_slate*). The accent color changed from a darker, crimson-ish red to a brighter tone that is more a salmon-like orange (I called it *humble_salmon*).^[The reason I bothered coming up with names will be explained in the next section.]\n\nFor **plotting** I needed more colors. I built a palette that has components in all major color \"directions\" (red: *jolly_red*, blue: *jolly_petrol* & *jolly_blue*, green: *jolly_green* and yellow: *jolly_yellow*) to allow for all plotting needs. For now I only defined a few base colors and will use variations on them if I need them in special plots.\n\nThese are the colors in action:\n\n:::{.column-body-outset}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](with-flying-colours_files/figure-html/unnamed-chunk-1-1.png){width=768}\n:::\n\n::: {.cell-output-display}\n![](with-flying-colours_files/figure-html/unnamed-chunk-1-2.png){width=768}\n:::\n:::\n\n\n:::\n\n## The ggplot2 theme\n\nIn the [first post](https://jollydata.blog/posts/2021-01-01-olympic-history/) I used a `color_brewer` palette and didn't change the `theme_minimal()` much. After that I developed a look, that I liked and used it in the [second post](https://jollydata.blog/posts/2021-01-24-world-of-waste/). But [since then](https://jollydata.blog/posts/2021-03-07-bundestag-part-i/) I always had to manually copy the custom theme, which was quite error prone and I probably never was completely consistent. \n\nThis is why I wanted to streamline the process of writing by creating a custom theme. I used two blog posts as inspiration for how to achieve this: [https://www.r-bloggers.com/2018/09/custom-themes-in-ggplot2/](https://www.r-bloggers.com/2018/09/custom-themes-in-ggplot2/) and [https://themockup.blog/posts/2020-12-26-creating-and-using-custom-ggplot2-themes/](https://themockup.blog/posts/2020-12-26-creating-and-using-custom-ggplot2-themes/).\n\nI now wrote a custom theme-function called \"jolly_theme()\" based on `theme_minimal()`, that I can conveniently call when needed (as I did in the two plots above) and still tweak it to the specific plot, if needed.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"ggplot2\")\nlibrary(\"showtext\")\nfont_add_google(\"Bitter\")\nfont_add_google(\"Open Sans\")\nshowtext_auto()\n\njolly_theme <- function(\n  base_size = 12,\n  base_family = \"Open Sans\"\n){\n  theme_minimal(base_size = base_size, \n                base_family = base_family) %+replace%\n  theme(\n    plot.title = element_text(\n      family = \"Bitter\",\n      face = \"bold\",\n      size = rel(1.8),\n      hjust = 0,\n      vjust = 10),\n    plot.subtitle = element_text(\n      face = \"italic\",\n      size = rel(1.8),\n      hjust = 0,\n      vjust = 8\n    ),\n    plot.caption = element_text(\n      size = rel(1.2),\n      face = \"italic\",\n      hjust = 1\n    ),\n    plot.margin = margin(1.5, 0.4, 0.4, 0.4, unit = \"cm\"),\n    axis.title = element_text(\n      face = \"bold\",\n      size = rel(1.4)),\n    axis.title.x = element_text(margin = margin(t = 15, r = 0, b = 0, l = 0)),\n    axis.title.y = element_text(margin = margin(t = 0, r = 15, b = 0, l = 0), angle = 90),\n    axis.text = element_text(\n      size = rel(1.4)),\n    legend.position = \"bottom\",\n    legend.title = element_text(\n      face = \"bold\",\n      size = rel(1.4)\n    ),\n\n    complete = TRUE\n  )\n}\n\n# store colours for comfortable plotting\n\nhumble_salmon <- \"#EC836D\"\ndark_slate <- \"#394755\"\njolly_red <- \"#E86B72\"\njolly_petrol <- \"#2D7F89\"\njolly_blue <- \"#1BC7DC\"\njolly_green <- \"#56BB83\"\njolly_yellow <- \"#F39F5C\"\n```\n:::\n\n\nIn the same R-script I defined my new color palette. Whenever I write a new post, I include the following line in the setup chunk and can then call the colors and the custom theme by their names.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsource(\"../../resources/jolly_theme.R\", local = knitr::knit_global())\n```\n:::\n\n\n## Conclusions\nThe blog got an update in the visual appearance. I will come back to this post and add sections, as soon as I find time to apply the theme and color palette to a python template. If I define a nice palette on one of the main colors, I might add this here as well. If you're into typography as well and want to have a chat about font pairings, feel free to contact me via [twitter](https://twitter.com/JollydataB) or [mastodon](https://scicomm.xyz/@basepair).",
    "supporting": [
      "with-flying-colours_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}